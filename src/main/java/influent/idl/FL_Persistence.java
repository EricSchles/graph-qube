/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package influent.idl;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public interface FL_Persistence {
  public static final org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse("{\"protocol\":\"FL_Persistence\",\"namespace\":\"influent.idl\",\"types\":[{\"type\":\"enum\",\"name\":\"FL_RequiredPropertyKey\",\"doc\":\"* A list of the required property keys that are reserved by the system and should be included as\\r\\n\\t * the keys in FL_PropertyMatchDescriptors. Keys are case sensitive.\\r\\n\\t *\\r\\n\\t * ADDED IN 2.0\",\"symbols\":[\"NAME\",\"ID\",\"FROM\",\"TO\",\"DATE\",\"AMOUNT\",\"ENTITY\",\"LINKED\",\"TYPE\"]},{\"type\":\"enum\",\"name\":\"FL_ReservedPropertyKey\",\"doc\":\"* A list of case sensitive keys which are reserved keywords in search.\\r\\n\\t *\\r\\n\\t * ADDED IN 2.0\",\"symbols\":[\"TYPE\",\"ORDER\",\"MATCH\",\"SCORE\"]},{\"type\":\"enum\",\"name\":\"FL_PropertyTag\",\"doc\":\"* Tags are defined by the application layer as a taxonomy of user and application concepts,\\r\\n\\t * independent of the data sources. This allows application semantics to be re-used with new\\r\\n\\t * data, with a minimum of new software design and development. Data layer entity types, link\\r\\n\\t * types and properties should be mapped into the list of tags. The application layer must be\\r\\n\\t * able to search by native field name or by tag interchangeably, and properties returned must\\r\\n\\t * contain both native field names as well as tags.\\r\\n\\t *\\r\\n\\t * The list of tags may change as application features evolve, though that will require\\r\\n\\t * collaboration with the data layer providers. Evolving the tag list should not change the\\r\\n\\t * Data Access or Search APIs.\\r\\n\\t *\\r\\n\\t * This is the current list of tags for Properties:\\r\\n\\t *\\r\\n\\t * CHANGED in 1.5:\\r\\n\\t * - CREDIT/DEBIT changed to INFLOWING/OUTFLOWING\\r\\n\\t * - added USD\\r\\n\\t * - added DURATION\\r\\n\\t *\\r\\n\\t * CHANGED in 1.6:\\r\\n\\t * - added ENTITY_TYPE\\r\\n\\t * - added ACCOUNT_OWNER, CLUSTER_SUMMARY, COUNTRY_CODE\\r\\n\\t *\\r\\n\\t * CHANGED in 1.7:\\r\\n\\t * - added CLUSTER\\r\\n\\t *\\r\\n\\t * CHANGED in 1.8:\\r\\n\\t * - added TOPIC\\r\\n\\t *\\r\\n\\t * CHANGED in 1.9:\\r\\n\\t * - added HTML\\r\\n\\t *\\r\\n\\t * CHANGED in 2.0:\\r\\n\\t * - added UNITS\",\"symbols\":[\"ID\",\"TYPE\",\"ENTITY_TYPE\",\"ACCOUNT_OWNER\",\"CLUSTER_SUMMARY\",\"CLUSTER\",\"NAME\",\"LABEL\",\"STAT\",\"TEXT\",\"HTML\",\"TOPIC\",\"STATUS\",\"ANNOTATION\",\"WARNING\",\"LINKED_DATA\",\"GEO\",\"COUNTRY_CODE\",\"DATE\",\"AMOUNT\",\"INFLOWING\",\"OUTFLOWING\",\"COUNT\",\"SERIES\",\"CONSTRUCTED\",\"RAW\",\"UNITS\",\"USD\",\"DURATION\",\"ENTITY\",\"SHARED_IDENTIFIER\"]},{\"type\":\"enum\",\"name\":\"FL_EntityTag\",\"doc\":\"* This is the current list of tags for Entities:\\r\\n\\t *\\r\\n\\t * CHANGED in 1.6:\\r\\n\\t * - added ACCOUNT_OWNER, CLUSTER_SUMMARY\\r\\n\\t *\\r\\n\\t * CHANGED in 1.7:\\r\\n\\t * - added PROMPT_FOR_DETAILS\\r\\n\\t *\\r\\n\\t * CHANGED in 1.8:\\r\\n\\t * - added UNBRANCHABLE\",\"symbols\":[\"ACCOUNT_OWNER\",\"ACCOUNT\",\"GROUP\",\"CLUSTER\",\"CLUSTER_SUMMARY\",\"FILE\",\"ANONYMOUS\",\"UNBRANCHABLE\",\"PROMPT_FOR_DETAILS\",\"OTHER\"]},{\"type\":\"enum\",\"name\":\"FL_PropertyType\",\"doc\":\"* Allowed types for Property values.\\r\\n\\t *\\r\\n\\t * CHANGED in 1.9\",\"symbols\":[\"FLOAT\",\"DOUBLE\",\"INTEGER\",\"LONG\",\"BOOLEAN\",\"STRING\",\"IMAGE\",\"DATE\",\"GEO\"]},{\"type\":\"enum\",\"name\":\"FL_LevelOfDetail\",\"doc\":\"* Amount of detail requested\\r\\n\\t *\\r\\n\\t * ADDED IN 1.6\\r\\n\\t *\\r\\n\\t * CHANGED in 2.0:\\r\\n\\t * - added KEY\",\"symbols\":[\"KEY\",\"SUMMARY\",\"FULL\",\"HIDDEN\"]},{\"type\":\"enum\",\"name\":\"FL_ContinentCode\",\"doc\":\"* Standard two letter continent code\\r\\n\\t *\\r\\n\\t * ADDED IN 1.6\",\"symbols\":[\"AF\",\"AS\",\"EU\",\"NA\",\"SA\",\"OC\",\"AN\"]},{\"type\":\"enum\",\"name\":\"FL_DateInterval\",\"doc\":\"* Temporal resolution of a duration\\r\\n\\t *\\r\\n\\t * CHANGED IN 1.5\",\"symbols\":[\"SECONDS\",\"HOURS\",\"DAYS\",\"WEEKS\",\"MONTHS\",\"QUARTERS\",\"YEARS\"]},{\"type\":\"enum\",\"name\":\"FL_RangeType\",\"doc\":\"* Allowed types for Ranges of values.\\r\\n\\t *\\r\\n\\t * CHANGED IN 1.6\",\"symbols\":[\"SINGLETON\",\"LIST\",\"BOUNDED\",\"DISTRIBUTION\"]},{\"type\":\"enum\",\"name\":\"FL_Constraint\",\"doc\":\"* Property value matching constraints\\r\\n\\t *\\r\\n\\t * ADDED IN 1.5\\r\\n\\t * MOVED IN 2.0\",\"symbols\":[\"REQUIRED_EQUALS\",\"FUZZY_PARTIAL_OPTIONAL\",\"NOT\",\"OPTIONAL_EQUALS\",\"FUZZY_REQUIRED\"]},{\"type\":\"enum\",\"name\":\"FL_SearchableBy\",\"doc\":\"* Used to describe in which contexts a term can (or should) be searched. Free text searches\\r\\n\\t * do not describe properties to which they apply, and are often best restricted to\\r\\n\\t * identity fields like names.\\r\\n\\t *\\r\\n\\t * ADDED IN 1.8\\r\\n\\t * MOVED IN 2.0\",\"symbols\":[\"FREE_TEXT\",\"DESCRIPTOR\",\"NONE\"]},{\"type\":\"enum\",\"name\":\"FL_DirectionFilter\",\"doc\":\"* Direction of desired links\",\"symbols\":[\"SOURCE\",\"DESTINATION\",\"BOTH\"]},{\"type\":\"enum\",\"name\":\"FL_LinkEntityTypeFilter\",\"doc\":\"* Type of entity associated with desired links\\r\\n\\t *\\r\\n\\t * ADDED IN 1.6\",\"symbols\":[\"ACCOUNT_OWNER\",\"ACCOUNT\",\"CLUSTER_SUMMARY\",\"ANY\"]},{\"type\":\"enum\",\"name\":\"FL_PathMatchTag\",\"doc\":\"* In addition to PropertyTags, a PropertyMatchDescriptor might also be one of these.\\r\\n\\t *\\r\\n\\t * ADDED IN 1.5\",\"symbols\":[\"PATH_LENGTH\",\"PATH_TIME\",\"PATH_SOURCES\",\"PATH_DESTS\"]},{\"type\":\"enum\",\"name\":\"FL_PersistenceState\",\"doc\":\"* Persistence save state\",\"symbols\":[\"NEW\",\"MODIFIED\",\"NONE\",\"ERROR\"]}],\"messages\":{\"persistData\":{\"doc\":\"* Saves the client state given a session UID.\\r\\n\\t *\\r\\n\\t * Service URL: /persist\\r\\n\\t * HTTP Method: POST\\r\\n\\t *\\r\\n\\t * @param sessionId \\tsession uid\\r\\n\\t * @param data \\t\\t\\tstring representation of client state\\r\\n\\t * @return\\t\\t\\t\\tstate of persistence for the sessionId\",\"request\":[{\"name\":\"sessionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"data\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"response\":\"FL_PersistenceState\"},\"getData\":{\"doc\":\"* Returns the last saved client state given a session UID.\\r\\n\\t *\\r\\n\\t * Service URL: /persist\\r\\n\\t * HTTP Method: GET\\r\\n\\t *\\r\\n\\t * @param sessionId \\tsession uid\\r\\n\\t * @return \\t\\t\\t\\tclient state data\",\"request\":[{\"name\":\"sessionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"response\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}}");
  /** * Saves the client state given a session UID.
	 *
	 * Service URL: /persist
	 * HTTP Method: POST
	 *
	 * @param sessionId 	session uid
	 * @param data 			string representation of client state
	 * @return				state of persistence for the sessionId */
  influent.idl.FL_PersistenceState persistData(java.lang.String sessionId, java.lang.String data) throws org.apache.avro.AvroRemoteException;
  /** * Returns the last saved client state given a session UID.
	 *
	 * Service URL: /persist
	 * HTTP Method: GET
	 *
	 * @param sessionId 	session uid
	 * @return 				client state data */
  java.lang.String getData(java.lang.String sessionId) throws org.apache.avro.AvroRemoteException;

  @SuppressWarnings("all")
  public interface Callback extends FL_Persistence {
    public static final org.apache.avro.Protocol PROTOCOL = influent.idl.FL_Persistence.PROTOCOL;
    /** * Saves the client state given a session UID.
	 *
	 * Service URL: /persist
	 * HTTP Method: POST
	 *
	 * @param sessionId 	session uid
	 * @param data 			string representation of client state
	 * @return				state of persistence for the sessionId */
    void persistData(java.lang.String sessionId, java.lang.String data, org.apache.avro.ipc.Callback<influent.idl.FL_PersistenceState> callback) throws java.io.IOException;
    /** * Returns the last saved client state given a session UID.
	 *
	 * Service URL: /persist
	 * HTTP Method: GET
	 *
	 * @param sessionId 	session uid
	 * @return 				client state data */
    void getData(java.lang.String sessionId, org.apache.avro.ipc.Callback<java.lang.String> callback) throws java.io.IOException;
  }
}